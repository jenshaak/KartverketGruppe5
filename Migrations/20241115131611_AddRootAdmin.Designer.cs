// <auto-generated />
using System;
using KartverketGruppe5.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KartverketGruppe5.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241115131611_AddRootAdmin")]
    partial class AddRootAdmin
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("KartverketGruppe5.Data.GeoChange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("GeoJson")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("GeoChanges");
                });

            modelBuilder.Entity("KartverketGruppe5.Models.Bruker", b =>
                {
                    b.Property<int>("BrukerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("BrukerId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Etternavn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Fornavn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("OpprettetDato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Passord")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("BrukerId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Bruker", (string)null);
                });

            modelBuilder.Entity("KartverketGruppe5.Models.Fylke", b =>
                {
                    b.Property<int>("FylkeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("FylkeId"));

                    b.Property<string>("FylkeNummer")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("FylkeId");

                    b.HasIndex("FylkeNummer")
                        .IsUnique();

                    b.HasIndex("Navn")
                        .IsUnique();

                    b.ToTable("Fylke", (string)null);
                });

            modelBuilder.Entity("KartverketGruppe5.Models.Innmelding", b =>
                {
                    b.Property<int>("InnmeldingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("InnmeldingId"));

                    b.Property<string>("Beskrivelse")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("BrukerId")
                        .HasColumnType("int");

                    b.Property<string>("Kommentar")
                        .HasColumnType("TEXT");

                    b.Property<int>("KommuneId")
                        .HasColumnType("int");

                    b.Property<int>("LokasjonId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OppdatertDato")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("OpprettetDato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("SaksbehandlerId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("Ny");

                    b.HasKey("InnmeldingId");

                    b.HasIndex("BrukerId");

                    b.HasIndex("KommuneId");

                    b.HasIndex("LokasjonId");

                    b.HasIndex("SaksbehandlerId");

                    b.ToTable("Innmelding", (string)null);
                });

            modelBuilder.Entity("KartverketGruppe5.Models.Kommune", b =>
                {
                    b.Property<int>("KommuneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("KommuneId"));

                    b.Property<int>("FylkeId")
                        .HasColumnType("int");

                    b.Property<string>("KommuneNummer")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("KommuneId");

                    b.HasIndex("FylkeId");

                    b.HasIndex("Navn")
                        .IsUnique();

                    b.ToTable("Kommune", (string)null);
                });

            modelBuilder.Entity("KartverketGruppe5.Models.Lokasjon", b =>
                {
                    b.Property<int>("LokasjonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("LokasjonId"));

                    b.Property<string>("GeoJson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GeometriType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("DECIMAL(10,8)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("DECIMAL(11,8)");

                    b.HasKey("LokasjonId");

                    b.ToTable("Lokasjon", (string)null);
                });

            modelBuilder.Entity("KartverketGruppe5.Models.Saksbehandler", b =>
                {
                    b.Property<int>("SaksbehandlerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("SaksbehandlerId"));

                    b.Property<bool>("Admin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Etternavn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Fornavn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("OpprettetDato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Passord")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("SaksbehandlerId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Saksbehandler", (string)null);

                    b.HasData(
                        new
                        {
                            SaksbehandlerId = 1,
                            Admin = true,
                            Email = "admin@kartverket.no",
                            Etternavn = "Bruker",
                            Fornavn = "Admin",
                            OpprettetDato = new DateTime(2024, 11, 15, 13, 16, 10, 970, DateTimeKind.Utc).AddTicks(4858),
                            Passord = "pmWkWSBCL51Bfkhn79xPuKBKHz//H6B+mY6G9/eieuM="
                        });
                });

            modelBuilder.Entity("KartverketGruppe5.Models.Innmelding", b =>
                {
                    b.HasOne("KartverketGruppe5.Models.Bruker", "Bruker")
                        .WithMany()
                        .HasForeignKey("BrukerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KartverketGruppe5.Models.Kommune", "Kommune")
                        .WithMany()
                        .HasForeignKey("KommuneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KartverketGruppe5.Models.Lokasjon", "Lokasjon")
                        .WithMany()
                        .HasForeignKey("LokasjonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KartverketGruppe5.Models.Saksbehandler", "Saksbehandler")
                        .WithMany()
                        .HasForeignKey("SaksbehandlerId");

                    b.Navigation("Bruker");

                    b.Navigation("Kommune");

                    b.Navigation("Lokasjon");

                    b.Navigation("Saksbehandler");
                });

            modelBuilder.Entity("KartverketGruppe5.Models.Kommune", b =>
                {
                    b.HasOne("KartverketGruppe5.Models.Fylke", null)
                        .WithMany()
                        .HasForeignKey("FylkeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
