@model KartverketGruppe5.Models.LokasjonModel
@{
    ViewData["Title"] = "Map Change";
}

<div class="flex flex-col gap-12 items-center justify-center bg-white rounded-xl p-8 mapChange-width">
    <h2 class="text-center text-4xl text-semibold">Register en endring</h2>

    <form asp-controller="MapChange" asp-action="Index" method="post" class="flex flex-col gap-4 w-full" enctype="multipart/form-data">
        <div id="map" style="height: 400px;" class="rounded-md"></div>
        <div class="flex flex-col gap-2">
            <label for="beskrivelse">Beskrivelse</label>
            <textarea 
                id="beskrivelse" 
                name="beskrivelse" 
                class="textarea" 
                placeholder="Beskriv endringen du vil registrere"
                required
            ></textarea>
        </div>
        <input type="hidden" id="geoJsonInput" asp-for="GeoJson" />
        <input type="hidden" asp-for="GeometriType" />
        <input type="hidden" id="latitude" asp-for="Latitude" />
        <input type="hidden" id="longitude" asp-for="Longitude" />
        <div class="flex flex-col gap-2">
            <p class="font-medium">Bilde:</p>
            <div id="bildeSeksjon" class="flex flex-col gap-2">
                <input type="file" 
                    id="bilde" 
                    name="bilde" 
                    accept="image/*" 
                    capture="environment" 
                    class="hidden" 
                    onchange="visForhandsvisning(this)" />
                <label for="bilde" class="btn btn-blue cursor-pointer" id="bildeLabel">
                    <i class="ph ph-camera ph-lg"></i>
                    <span id="bildeLabelText">Legg til bilde</span>
                </label>
                <div id="bildeForhandsvisning" class="mt-2" style="display: none;">
                    <img id="forhandsvisningImg" class="w-full h-auto rounded-lg" />
                </div>
            </div>
        </div>
        <button type="submit" class="btn btn-wide btn-primary">Send inn</button>
    </form>
</div>


@section Scripts {
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw.css" />
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw.js"></script>

    <script>
        var map = L.map('map');

        if ("geolocation" in navigator) {
            navigator.geolocation.getCurrentPosition(function(position) {
                var lat = position.coords.latitude;
                var lng = position.coords.longitude;
                map.setView([lat, lng], 12);
            }, function(error) {
                console.error('Error getting location:', error);
                map.setView([65.00000, 13.00000], 4);
            });
        } else {
            map.setView([65.00000, 13.00000], 4);
        }

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a>'
        }).addTo(map);

        var drawnItems = new L.FeatureGroup();
        map.addLayer(drawnItems);

        var drawControl = new L.Control.Draw({
            draw: {
                polygon: true,
                polyline: true,
                marker: true,
                circle: false,
                rectangle: true
            },
            edit: {
                featureGroup: drawnItems
            }
        });
        map.addControl(drawControl);

        map.on(L.Draw.Event.CREATED, function (e) {
            var type = e.layerType,
                layer = e.layer;

            drawnItems.addLayer(layer);

            var geoJsonData = layer.toGeoJSON();
            var geoJsonString = JSON.stringify(geoJsonData);
            document.getElementById('geoJsonInput').value = geoJsonString;
            document.getElementById('GeometriType').value = type;

            switch (type) {
                case 'marker':
                    var lat = layer.getLatLng().lat;
                    var lng = layer.getLatLng().lng;
                    document.getElementById('latitude').value = lat;
                    document.getElementById('longitude').value = lng;
                    break;
                    
                case 'polygon':
                    var coordinates = layer.getLatLngs()[0];
                    var centerPoint = layer.getBounds().getCenter();
                    document.getElementById('latitude').value = centerPoint.lat;
                    document.getElementById('longitude').value = centerPoint.lng;
                    break;
                    
                case 'polyline':
                    var coordinates = layer.getLatLngs();
                    var centerPoint = layer.getBounds().getCenter();
                    document.getElementById('latitude').value = centerPoint.lat;
                    document.getElementById('longitude').value = centerPoint.lng;
                    break;
                    
                case 'rectangle':
                    var bounds = layer.getBounds();
                    var centerPoint = bounds.getCenter();
                    document.getElementById('latitude').value = centerPoint.lat;
                    document.getElementById('longitude').value = centerPoint.lng;
                    break;
            }

            var popupContent = `
                <strong>Type:</strong> ${type}<br>
                <strong>GeoJSON:</strong><br>
                <pre style="max-height: 100px; overflow: auto;">${JSON.stringify(geoJsonData, null, 2)}</pre>
            `;
            layer.bindPopup(popupContent).openPopup();
        });

        map.on('click', function (e) {
            var lat = e.latlng.lat;
            var lng = e.latlng.lng;

            document.getElementById('latitude').value = lat;
            document.getElementById('longitude').value = lng;
            document.getElementById('GeometriType').value = 'Point';

            var marker = L.marker([lat, lng]).addTo(map);

            var geoJsonPoint = {
                "type": "Feature",
                "geometry": {
                    "type": "Point",
                    "coordinates": [lng, lat]
                },
                "properties": {
                    "description": "User clicked location"
                }
            };
            var geoJsonString = JSON.stringify(geoJsonPoint);
            document.getElementById('geoJsonInput').value = geoJsonString;

            marker.bindPopup("GeoJSON Data:<br>" + geoJsonString).openPopup();
        });

        function visForhandsvisning(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                
                reader.onload = function(e) {
                    var forhandsvisningDiv = document.getElementById('bildeForhandsvisning');
                    var forhandsvisningImg = document.getElementById('forhandsvisningImg');
                    var bildeLabelText = document.getElementById('bildeLabelText');
                    
                    forhandsvisningImg.src = e.target.result;
                    forhandsvisningDiv.style.display = 'block';
                    bildeLabelText.textContent = 'Erstatt bildet';
                }
                
                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>
}

