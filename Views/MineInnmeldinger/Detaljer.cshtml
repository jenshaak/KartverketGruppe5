@using KartverketGruppe5.Models
@using System.Text.Encodings.Web
@using System.Text.Json
@model InnmeldingModel
@{
    ViewData["Title"] = "Innmelding Detaljer";
    var lokasjon = ViewBag.Lokasjon as LokasjonModel;
}

<div class="w-full flex justify-center py-12 bakgrunn-bilde-taake">
    <div class="relative w-4/5 flex flex-col gap-4 bg-bg/85 rounded-xl p-8">
        <h1 class="text-3xl font-bold mt-4 text-center">Endre innmelding</h1>
        <a asp-action="Index" class="btn btn-primary btn-back">
            <i class="ph ph-arrow-left ph-lg"></i>
            Tilbake
        </a>
        <div class="flex justify-between items-center w-full rounded-lg bg-white px-6 py-4">
            <div>@Model.KommuneNavn</div>
            <div>@Model.OpprettetDato.ToShortDateString()</div>
            <div class="flex items-center justify-center px-3 py-1 rounded-full @Model.StatusClass">@Model.Status</div>
        </div>
        @if (Model.Kommentar != null)
        {
            <div class="bg-white rounded-lg shadow p-6 flex gap-4">
                <p class="font-medium">Kommentar:</p>
                <p>@Model.Kommentar</p>
            </div>
        }
        <form asp-action="EndreInnmelding" 
            method="post" 
            enctype="multipart/form-data" 
            class="flex flex-col gap-4">
            <input type="hidden" asp-for="InnmeldingId" />
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4" style="min-height: 400px;" >
                <div class="bg-white rounded-lg shadow p-6 flex gap-4">
                    <div class="w-2/3 flex flex-col gap-4">
                        <p class="font-medium">Beskrivelse:</p>
                        <textarea asp-for="Beskrivelse" class="w-full h-full bg-slate-100 rounded-md p-2">@Model.Beskrivelse</textarea>
                    </div>
                    <div class="w-1/3 flex flex-col gap-4">
                        <p class="font-medium">Bilde:</p>
                        @if (!string.IsNullOrEmpty(Model.BildeSti))
                        {
                            <img id="eksisterendeBilde" 
                                src="@Url.Content("~/" + Model.BildeSti.TrimStart('/'))" 
                                alt="Innmelding-bilde" 
                                class="w-full h-auto rounded-md">
                            <div class="flex flex-col gap-2">
                                <input type="file" 
                                    asp-for="Bilde"
                                    id="bilde" 
                                    name="bilde" 
                                    accept="image/*" 
                                    capture="environment" 
                                    class="hidden" 
                                    onchange="visForhandsvisning(this)" />
                                <label for="bilde" class="btn btn-wide btn-blue cursor-pointer inline-block text-center">
                                    <i class="ph ph-camera ph-lg"></i>
                                    Erstatt bildet
                                </label>
                                <button type="button" onclick="fjernBilde(event)" class="btn btn-wide btn-red">
                                    <i class="ph ph-trash ph-lg"></i>
                                    Fjern bildet
                                </button>
                            </div>
                        }
                        else
                        {
                            <div id="bildeSeksjon" class="flex flex-col gap-2">
                                <input type="file" 
                                    asp-for="Bilde"
                                    id="bilde" 
                                    name="bilde" 
                                    accept="image/*" 
                                    capture="environment" 
                                    class="hidden" 
                                    onchange="visForhandsvisning(this)" />
                                <label for="bilde" class="btn btn-blue cursor-pointer">
                                    <i class="ph ph-camera ph-lg"></i>
                                    Legg til bilde
                                </label>
                                <div id="bildeForhandsvisning" class="mt-2" style="display: none;">
                                    <img id="forhandsvisningImg" class="w-full h-auto rounded-lg" />
                                </div>
                            </div>
                        }
                    </div>  
                </div>  
                <div class="rounded-lg shadow">
                    <div id="map" class="w-full h-full rounded-lg z-0"></div>
                    <input type="hidden" name="geoJsonInput" id="geoJsonInput" />
                    <input type="hidden" name="geometriType" id="geometriType" />
                    <input type="hidden" name="latitude" id="latitude" />
                    <input type="hidden" name="longitude" id="longitude" />
                </div>
            </div>
            <button type="submit" class="btn btn-wide btn-primary mt-4">
                <i class="ph ph-pencil ph-lg"></i>
                Endre innmelding
            </button>
        </form>
    </div>
</div>

@section Scripts {
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw.css" />
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet.draw/1.0.4/leaflet.draw.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var map = L.map('map');
            var drawnItems = new L.FeatureGroup();
            map.addLayer(drawnItems);

           var openstreetmap = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a>'
        });

        var topoLayer = L.tileLayer('https://cache.kartverket.no/v1/wmts/1.0.0/topo/default/webmercator/{z}/{y}/{x}.png', {
            attribution: '&copy; <a href="http://www.kartverket.no/">Kartverket</a>'
        });

        var grayLayer = L.tileLayer('https://cache.kartverket.no/v1/wmts/1.0.0/topograatone/default/webmercator/{z}/{y}/{x}.png', {
            attribution: '&copy; <a href="http://www.kartverket.no/">Kartverket</a>'
        });

        var esriFlyfotoLayer = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {
            attribution: '&copy; <a href="https://www.esri.com/">Esri</a>'
        });

        // Standard kartlag
        topoLayer.addTo(map);

        // Konroll for å endringen på kartlag
        var baseMaps = {
            "Topografisk kart": topoLayer,
            "Grått kart": grayLayer,
            "Open Streetmap": openstreetmap,
            "Fly Foto": esriFlyfotoLayer
        };

        L.control.layers(baseMaps).addTo(map);

            // Legg til draw control
            var drawControl = new L.Control.Draw({
                draw: {
                    polygon: true,
                    polyline: true,
                    marker: true,
                    circle: false,
                    rectangle: true
                },
                edit: {
                    featureGroup: drawnItems
                }
            });
            map.addControl(drawControl);

            @if (lokasjon != null)
            {
                <text>
                // Sett kartvisning til eksisterende lokasjon
                map.setView([@lokasjon.Latitude, @lokasjon.Longitude], 15);

                @if (!string.IsNullOrEmpty(lokasjon.GeoJson))
                {
                    <text>
                    try {
                        // Logg GeoJSON-dataen for å se hva vi får
                        console.log('Original GeoJSON:', @Html.Raw(lokasjon.GeoJson));
                        
                        var existingGeoJson = @Html.Raw(lokasjon.GeoJson);  // Gå tilbake til original
                        console.log('Parsed GeoJSON:', existingGeoJson);

                        var existingLayer = L.geoJSON(existingGeoJson, {
                            style: function(feature) {
                                return {
                                    color: "#ff7800",
                                    weight: 3,
                                    opacity: 0.65
                                };
                            },
                            pointToLayer: function (feature, latlng) {
                                console.log('Creating point at:', latlng);
                                return L.marker(latlng);
                            }
                        }).addTo(drawnItems);
                        
                        // Bind popup med escapede beskrivelse
                        existingLayer.bindPopup('@JavaScriptEncoder.Default.Encode(Model.Beskrivelse)').openPopup();
                        
                        // Zoom til feature
                        map.fitBounds(existingLayer.getBounds());
                    } catch (error) {
                        console.error('Feil ved lasting av GeoJSON:', error);
                        console.error('Error details:', error.message);
                    }
                    </text>
                }
                else
                {
                    <text>
                    // Legg til markør hvis ingen GeoJSON
                    var marker = L.marker([@lokasjon.Latitude, @lokasjon.Longitude]).addTo(drawnItems);
                    marker.bindPopup('@Model.Beskrivelse').openPopup();
                    </text>
                }
                </text>
            }

            // Håndter nye tegninger
            map.on(L.Draw.Event.CREATED, function (e) {
                var type = e.layerType,
                    layer = e.layer;

                // Fjern eksisterende features
                drawnItems.clearLayers();
                
                // Legg til ny feature
                drawnItems.addLayer(layer);

                var geoJsonData = layer.toGeoJSON();
                var geoJsonString = JSON.stringify(geoJsonData);
                
                // Oppdater skjulte felt
                document.getElementById('geoJsonInput').value = geoJsonString;
                document.getElementById('geometriType').value = type;

                // Håndter ulike geometrityper
                switch (type) {
                    case 'marker':
                        var lat = layer.getLatLng().lat;
                        var lng = layer.getLatLng().lng;
                        document.getElementById('latitude').value = lat;
                        document.getElementById('longitude').value = lng;
                        break;
                    case 'polygon':
                    case 'polyline':
                    case 'rectangle':
                        var centerPoint = layer.getBounds().getCenter();
                        document.getElementById('latitude').value = centerPoint.lat;
                        document.getElementById('longitude').value = centerPoint.lng;
                        break;
                }

                // Bind popup med GeoJSON info
                var popupContent = `<strong>Nytt område registrert</strong>`;
                layer.bindPopup(popupContent).openPopup();
            });

            // Håndter klikk på kartet
            map.on('click', function (e) {
                var lat = e.latlng.lat;
                var lng = e.latlng.lng;

                // Fjern eksisterende features
                drawnItems.clearLayers();

                // Oppdater skjulte felt
                document.getElementById('latitude').value = lat;
                document.getElementById('longitude').value = lng;
                document.getElementById('geometriType').value = 'Point';

                var marker = L.marker([lat, lng]).addTo(drawnItems);

                var geoJsonPoint = {
                    "type": "Feature",
                    "geometry": {
                        "type": "Point",
                        "coordinates": [lng, lat]
                    },
                    "properties": {
                        "description": "Oppdatert lokasjon"
                    }
                };
                var geoJsonString = JSON.stringify(geoJsonPoint);
                document.getElementById('geoJsonInput').value = geoJsonString;

                marker.bindPopup("Ny lokasjon valgt").openPopup();
            });
        });

        // Vis forhåndsvisning av bilde
        function visForhandsvisning(input) {
            var eksisterendeBilde = document.getElementById('eksisterendeBilde');
            
            if (input.files && input.files[0]) {
                const file = input.files[0];
                
                // Sjekk at filen er et bilde
                if (!file.type.match('image.*')) {
                    alert('Vennligst velg et gyldig bildeformat');
                    return;
                }
                
                // Sjekk at filen er mindre enn 5MB
                if (file.size > 10 * 1024 * 1024) {
                    alert('Bildet er for stort. Maksimal størrelse er 10MB');
                    return;
                }

                var reader = new FileReader();
                reader.onload = function(e) {
                    if (eksisterendeBilde) {
                        // Oppdater eksisterende bilde
                        eksisterendeBilde.src = e.target.result;
                    } else {
                        // Vis forhåndsvisning
                        var forhandsvisningDiv = document.getElementById('bildeForhandsvisning');
                        var forhandsvisningImg = document.getElementById('forhandsvisningImg');
                        forhandsvisningImg.src = e.target.result;
                        forhandsvisningDiv.style.display = 'block';
                    }
                }
                reader.readAsDataURL(file);
            }
        }

        // Fjern bildet
        function fjernBilde(event) {
            event.preventDefault(); // Forhindre form submit
            
            // Finn bilde-seksjonen
            var bildeSeksjon = document.querySelector('.w-1/3');
            
            // Oppdater innholdet med nøyaktig samme struktur som i else-statementet
            bildeSeksjon.innerHTML = `
                <p class="font-medium">Bilde:</p>
                <div id="bildeSeksjon" class="flex flex-col gap-2">
                    <input type="file" 
                        id="bilde" 
                        name="bilde" 
                        accept="image/*" 
                        capture="environment" 
                        class="hidden" 
                        onchange="visForhandsvisning(this)" />
                    <label for="bilde" class="btn btn-blue cursor-pointer inline-block text-center">
                        Legg til bilde
                    </label>
                    <div id="bildeForhandsvisning" class="mt-2" style="display: none;">
                        <img id="forhandsvisningImg" class="w-full h-auto rounded-lg" />
                    </div>
                </div>
            `;
            
            // Legg til skjult felt for å indikere at bildet skal fjernes
            var form = document.querySelector('form');
            var fjernBildeInput = document.createElement('input');
            fjernBildeInput.type = 'hidden';
            fjernBildeInput.name = 'fjernBilde';
            fjernBildeInput.value = 'true';
            form.appendChild(fjernBildeInput);
        }
    </script>
} 