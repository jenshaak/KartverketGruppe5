@using System.Text.Encodings.Web
@model InnmeldingViewModel
@{
    ViewData["Title"] = "Innmelding Detaljer";
    var lokasjon = ViewBag.Lokasjon as LokasjonViewModel;
    var saksbehandlere = ViewBag.Saksbehandlere as List<Saksbehandler>;
    var saksbehandlerId = Context.Session.GetInt32("SaksbehandlerId");
    var isAdmin = Context.Session.GetString("IsAdmin") == "True";
}

<div class="page-container">
        <div class="content-container">
        <a asp-action="Index" class="btn btn-primary btn-back">
            <i class="ph ph-arrow-left ph-lg"></i>
            Tilbake
        </a>
        <h1 class="text-3xl font-bold text-center">Behandling av innmeldingen</h1>

        <partial name="_InnmeldingVisning" model="Model" />

        <!-- Handlinger -->
        <div class="max-md-flex-col mt-10 flex justify-between gap-6 items-center w-full rounded-lg bg-white p-4">
            @if (Model.SaksbehandlerId == null || Model.SaksbehandlerId == saksbehandlerId || isAdmin) {
                <form asp-action="Videresend" method="post" class="flex border border-slate-300 rounded-lg w-max">
                    <input type="hidden" asp-for="InnmeldingId" />
                    <select name="saksbehandlerId" class="rounded-l-lg p-2 focus:border-blue-500 focus:ring-blue-500">
                        <option value="">Velg saksbehandler</option>
                        @foreach (var saksbehandler in ViewBag.Saksbehandlere)
                        {
                            <option value="@saksbehandler.SaksbehandlerId">
                                @($"{saksbehandler.Fornavn} {saksbehandler.Etternavn}")
                            </option>
                        }
                    </select>
                    <button type="submit" class="bg-blue-500 rounded-r-lg text-white p-2">
                        Gjør ansvarlig
                    </button>
                </form>
                @if (Model.SaksbehandlerId != saksbehandlerId && !isAdmin) {
                    <form asp-action="Behandle" method="post">
                        <input type="hidden" name="id" value="@Model.InnmeldingId" />
                        <button type="submit" class="btn btn-primary">
                        Ta over saken
                        </button>
                    </form>
                } else if (!isAdmin) {
                    <b>Ansvarlig saksbehandler: Deg (@Model.SaksbehandlerNavn)</b>
                } else {
                    @if (Model.SaksbehandlerId == null)
                    {
                        <p>Ingen saksbehandler har tatt saken ennå</p>
                        <form asp-action="Behandle" method="post">
                            <input type="hidden" name="id" value="@Model.InnmeldingId" />
                                <button type="submit" class="btn btn-primary">
                                Ta over saken
                                </button>
                        </form>
                    }
                    else
                    {
                        <b>Ansvarlig saksbehandler: @Model.SaksbehandlerNavn</b>
                    }
                }
            } else {
                <b>Ansvarlig saksbehandler: @Model.SaksbehandlerNavn</b>
            }
        </div>
    </div>
</div>



@section Scripts {
    <script>
        // Vent til dokumentet er lastet
        document.addEventListener('DOMContentLoaded', function() {
            // Initialiser kartet
            var map = L.map('map');

            // Legger til kartlag
            var openstreetmap = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a>'
            });

            var topoLayer = L.tileLayer('https://cache.kartverket.no/v1/wmts/1.0.0/topo/default/webmercator/{z}/{y}/{x}.png', {
                attribution: '&copy; <a href="http://www.kartverket.no/">Kartverket</a>'
            });

            var grayLayer = L.tileLayer('https://cache.kartverket.no/v1/wmts/1.0.0/topograatone/default/webmercator/{z}/{y}/{x}.png', {
                attribution: '&copy; <a href="http://www.kartverket.no/">Kartverket</a>'
            });

            var esriFlyfotoLayer = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {
                attribution: '&copy; <a href="https://www.esri.com/">Esri</a>'
            });

            // Default kartlag
            topoLayer.addTo(map);

            // Konroll for å endringen på kartlag
            var baseMaps = {
                "Topografisk kart": topoLayer,
                "Grått kart": grayLayer,
                "Open Streetmap": openstreetmap,
                "Flyfoto": esriFlyfotoLayer
            };

            L.control.layers(baseMaps).addTo(map);

            @if (lokasjon != null)
            {
                <text>
                // Sett kartvisning til lokasjonens koordinater
                map.setView([@lokasjon.Latitude, @lokasjon.Longitude], 15);

                // Legg til markør
                var marker = L.marker([@lokasjon.Latitude, @lokasjon.Longitude]).addTo(map);
                
                // Escaper beskrivelsen for å unngå XSS
                marker.bindPopup('@JavaScriptEncoder.Default.Encode(Model.Beskrivelse)').openPopup();

                @if (!string.IsNullOrEmpty(lokasjon.GeoJson))
                {
                    <text>
                    try {
                        // Valider at GeoJSON er gyldig JSON før bruk
                        var geoJsonData = @Json.Serialize(lokasjon.GeoJson);
                        // Legger til GeoJSON
                        var geoJsonLayer = L.geoJSON(JSON.parse(geoJsonData), {
                            style: function(feature) {
                                return {
                                    color: "#ff7800",
                                    weight: 3,
                                    opacity: 0.65
                                };
                            }
                        }).addTo(map);
                        map.fitBounds(geoJsonLayer.getBounds());
                    } catch (e) {
                        console.error('Ugyldig GeoJSON-data');
                    }
                    </text>
                }
                </text>
            }
        });
    </script>
} 