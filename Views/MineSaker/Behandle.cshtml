@using System.Text.Encodings.Web
@using KartverketGruppe5.Models.ViewModels
@model InnmeldingViewModel
@{
    ViewData["Title"] = "Innmelding Detaljer";
    var lokasjon = ViewBag.Lokasjon as LokasjonViewModel;
    var saksbehandlere = ViewBag.Saksbehandlere as List<Saksbehandler>;
}

@if (Model == null)
{
    <div class="alert alert-danger">
        Fant ikke innmeldingen
    </div>
    return;
}

<div class="page-container">
    <div class="content-container">
        <a asp-action="Index" class="btn btn-primary btn-back">
            <i class="ph ph-arrow-left ph-lg"></i>
            Tilbake
        </a>
        <h1>Behandling av innmeldingen</h1>
        <div class="flex justify-between items-center w-full rounded-lg bg-white p-4">
            <div>@Model.KommuneNavn</div>
            <div>@Model.OpprettetDato.ToShortDateString()</div>
            <div class="flex items-center justify-center px-3 py-1 rounded-full @Model.StatusClass">@Model.Status</div>
        </div>
        <div class="w-full grid grid-cols-1 md:grid-cols-2 gap-8 mt-4" style="min-height: 400px;" >
            <div class="bg-white rounded-lg shadow p-6 flex gap-4">
                <div class="w-2/3 flex flex-col gap-4">
                    <p class="font-medium">Beskrivelse:</p>
                    <div class="w-full h-full bg-slate-100 rounded-md p-2">@Model.Beskrivelse</div>
                </div>
                <div class="w-1/3 flex flex-col gap-4">
                    <p class="font-medium">Bilde:</p>
                    @if (!string.IsNullOrEmpty(Model.BildeSti))
                    {
                        <img id="eksisterendeBilde" 
                        src="@Url.Content("~/" + Model.BildeSti.TrimStart('/'))" 
                        alt="Innmelding-bilde" 
                            class="w-full h-auto rounded-md">
                    }
                </div>  
            </div>  
            <div id="map" class="w-full h-full rounded-lg z-0"></div>
        </div>

        <!-- Handlinger -->
        <div class="mt-8 flex flex-col gap-4 w-full">
            <form asp-action="FullforBehandling" method="post" class="flex flex-col gap-4">
                <input type="hidden" asp-for="InnmeldingId" value="@Model.InnmeldingId" />
                <input type="hidden" asp-for="SaksbehandlerId" value="@Model.SaksbehandlerId" />
                
                @if (Model.Status != "Godkjent" && Model.Status != "Avvist")
                {
                <div class="flex flex-col gap-2">
                    <label for="kommentar" class="font-semibold">Kommentar</label>
                    <textarea name="kommentar" id="kommentar" rows="4" 
                              class="bg-white shadow-lg rounded-md p-2 w-full h-24"
                              placeholder="Skriv inn kommentar"
                              required></textarea>
                    </div>
                    <div class="w-full flex justify-evenly gap-4 text-white">
                        <button type="submit" name="status" value="Avvist" 
                                class="btn btn-red">
                            <i class="ph ph-x ph-lg"></i>
                            Avvis
                        </button>
                        <button type="submit" name="status" value="Godkjent" 
                                class="btn btn-primary">
                            <i class="ph ph-check ph-lg"></i>
                            Godkjenn
                        </button>
                    </div>
                } else {
                    <div class="flex gap-4 text-white">
                        <button type="submit" name="status" value="Under behandling" 
                                class="btn btn-primary">
                            Ta opp saken igjen
                        </button>
                    </div>
                }
        </form>
    </div>
</div>
</div>



@section Scripts {
    <script>
        // Vent til dokumentet er lastet
        document.addEventListener('DOMContentLoaded', function() {
            // Initialiser kartet
            var map = L.map('map');

            // Legg til kartlaget
           var openstreetmap = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a>'
            });

            var topoLayer = L.tileLayer('https://cache.kartverket.no/v1/wmts/1.0.0/topo/default/webmercator/{z}/{y}/{x}.png', {
                attribution: '&copy; <a href="http://www.kartverket.no/">Kartverket</a>'
            });

            var grayLayer = L.tileLayer('https://cache.kartverket.no/v1/wmts/1.0.0/topograatone/default/webmercator/{z}/{y}/{x}.png', {
                attribution: '&copy; <a href="http://www.kartverket.no/">Kartverket</a>'
            });

            var esriFlyfotoLayer = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {
                attribution: '&copy; <a href="https://www.esri.com/">Esri</a>'
            });

            // Default kartlag
            topoLayer.addTo(map);

            // Konroll for å endringen på kartlag
            var baseMaps = {
                "Topografisk kart": topoLayer,
                "Grått kart": grayLayer,
                "Open Streetmap": openstreetmap,
                "Fly Foto": esriFlyfotoLayer
            };

            L.control.layers(baseMaps).addTo(map);

            @if (lokasjon != null)
            {
                <text>
                // Sett kartvisning til lokasjonens koordinater
                map.setView([@lokasjon.Latitude, @lokasjon.Longitude], 15);

                // Legger til markør
                var marker = L.marker([@lokasjon.Latitude, @lokasjon.Longitude]).addTo(map);
                
                // Legg til encoding her for å beskytte mot XSS
                marker.bindPopup('@JavaScriptEncoder.Default.Encode(Model.Beskrivelse)').openPopup();

                @if (!string.IsNullOrEmpty(lokasjon.GeoJson))
                {
                    <text>
                    try {
                        // Bruk Json.Serialize i stedet for Html.Raw for å beskytte mot XSS
                        var geoJsonData = @Json.Serialize(lokasjon.GeoJson);
                        var geoJsonLayer = L.geoJSON(JSON.parse(geoJsonData), {
                            style: function(feature) {
                                return {
                                    color: "#ff7800",
                                    weight: 3,
                                    opacity: 0.65
                                };
                            }
                        }).addTo(map);
                        map.fitBounds(geoJsonLayer.getBounds());
                    } catch (e) {
                        console.error('Ugyldig GeoJSON-data');
                    }
                    </text>
                }
                </text>
            }
        });
    </script>
} 